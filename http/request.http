
### 1) 전체 주문 조회
GET http://localhost:10350/orders
Accept: application/json

###


### 2) 주문 생성: 배송일자 미지정 → 기본 오늘
POST http://localhost:10350/orders
Content-Type: application/json

{
  "orderType": "guest",
  "guestName": "테스트",
  "guestPhone": "010-0000-0000",
  "items": [
    { "bookId": 1, "quantity": 1, "giftWrapped": false }
  ]
}

> {%
    let b = response.body;
    if (typeof b === 'string') b = JSON.parse(b);
    client.global.set("orderId", b.orderId);
%}

###


### 3) 주문 생성: 배송일자 지정 (예: 2025-06-15)
POST http://localhost:10350/orders
Content-Type: application/json

{
  "newStatus": "SHIPPING",
  "changedBy": 999,
  "memo": "발송 준비 완료"
}

###

### 4) 주문 상태 변경: SHIPPING → COMPLETED
PATCH http://localhost:10345/orders/{{orderId}}/status
Content-Type: application/json

{
  "newStatus": "COMPLETED",
  "changedBy": 999,
  "memo": "배송 완료"
}

###

### 5) 상태 로그 조회: order_status_log 확인
GET http://localhost:10345/orders/{{orderId}}/status-log
Accept: application/json

###

### 6) 오류 예시: member인데 userId 누락
POST http://localhost:10350/orders
Content-Type: application/json

{
  "orderType": "member",
  "items": []
}

###

### 7) 반품 처리를 요청하는 API
POST http://localhost:10350/orders/1/returns
Content-Type: application/json

{
  "reason": "상품 파손",
  "requestedAt": "2025-06-11"
}

###

### 8) 반품 처리가 불가능한 상태인데 요청 -> 예외를 발생시키고 불가능하다고 메시지를 남겨야하나?
POST http://localhost:10350/orders/2/returns
Content-Type: application/json

{
  "reason": "상품 파손",
  "requestedAt": "2025-06-11"
}

